#version 430 core

layout (local_size_x = 128, local_size_y = 1, local_size_z = 1) in;

layout(std430, binding = 0) buffer InputBuffer
{
	 readonly uint data_in[];
};

layout(std430, binding = 1) buffer OutputBuffer
{
	writeonly uint data_out[];
};

uniform int n;
shared uint smem[256];
void main()
{
    uint th_id = gl_LocalInvocationID.x;
    uint y = gl_WorkGroupID.y;

    uint rowStart = y * n;

    uint i0 = 2 * th_id;
    uint i1 = i0 + 1;

    if (i0 >= n || i1 >= n) return;

    smem[i0] = data_in[rowStart + i0];
    smem[i1] = data_in[rowStart + i1];

    int offset = 1;
    for (int d = n >> 1; d > 0; d >>= 1) {
        barrier();
        if (th_id < d) {
            uint ai = offset * (i0 + 1) - 1;
            uint bi = offset * (i1 + 1) - 1;
            smem[bi] += smem[ai];
        }
        offset <<= 1; 
    }

    if (th_id == 0) smem[n - 1] = 0;

    for (int d = 1; d < n; d <<= 1) {
        offset >>= 1;
        barrier();
        if (th_id < d) {
            uint ai = offset * (i0 + 1) - 1;
            uint bi = offset * (i1 + 1) - 1;

            uint t = smem[ai];
            smem[ai] = smem[bi];
            smem[bi] += t;
        }
    }

    barrier();

    data_out[rowStart + i0] = smem[i0];
    data_out[rowStart + i1] = smem[i1];
}