#version 430 core

layout (local_size_x = 1024, local_size_y = 1, local_size_z = 1) in;

layout(std430, binding = 0) buffer DataBuffer
{
    uint data[];
};

layout(std430, binding = 1) buffer Is0Buffer
{
    uint is0[];
};

layout(std430, binding = 2) buffer Is1Buffer
{
    uint is1[];
};

layout(std430, binding = 3) buffer HistogramBuffer
{
    uint histogram[];
};

uniform uint n;
uniform uint bitStage;

void main()
{
    const uint threadID = gl_GlobalInvocationID.x;
    if(threadID >= n) return;

    uint bucket = (data[threadID] >> bitStage) & 1;
    is0[threadID] = bucket ^ 1;
    is1[threadID] = bucket;

    atomicAdd(histogram[bucket], 1);
}