#version 430 core
#include <BVHNodes>

layout (local_size_x = 1024, local_size_y = 1, local_size_z = 1) in;

layout(std430, binding = 0) buffer DataBuffer
{
    LeafNode data[];
};

layout(std430, binding = 1) buffer IsBelongingBuffer
{
    uint isBelonging[];
};

layout(std430, binding = 2) buffer HistogramBuffer
{
    uint histogram[];
};

uniform uint n;
uniform uint n_padded;
uniform uint bitStage;

void main()
{
    const uint threadID = gl_GlobalInvocationID.x;
    if(threadID >= n) return;

    uint bucket = (data[threadID].code >> bitStage) & 3;
    isBelonging[bucket * n_padded + threadID] = 1;
    atomicAdd(histogram[bucket], 1);
}