#version 430 core

layout (local_size_x = 1024, local_size_y = 1, local_size_z = 1) in;

layout(std430, binding = 0) buffer DataBufferIn
{
    uint data_in[];
};

layout(std430, binding = 1) buffer DataBufferOut
{
    uint data_out[];
};

layout(std430, binding = 2) buffer RelativeOffsetsBuffer
{
    uint relativeOffsets[];
};

layout(std430, binding = 3) buffer OffsetsBuffer
{
    uint offsets[];
};

uniform uint n;
uniform uint bitStage;

void main()
{
    const uint threadID = gl_GlobalInvocationID.x;
    if(threadID >= n) return;
    
    uint value = data_in[threadID];
    uint bucket = (value >> bitStage) & 1;
    uint offset = offsets[bucket] + relativeOffsets[bucket * n + threadID];

    data_out[offset] = data_in[threadID];
}